---
- name: Create ceph-csi-rbd namespace
  vars:
    ansible_python_interpreter: /opt/k8s_venv/bin/python
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_temp_path }}"
    api_version: v1
    kind: Namespace
    name: ceph-csi-rbd
    state: present

- name: Configure csi-config-map.yaml
  vars:
    ansible_python_interpreter: /opt/k8s_venv/bin/python
  kubernetes.core.k8s:
    state: present
    kubeconfig: "{{ kubeconfig_temp_path }}"
    definition:
      apiVersion: v1
      kind: ConfigMap
      data:
        config.json: |-
          [
            {
              "clusterID": "{{ ceph_cluster_id }}",
              "monitors": [
                {% for ceph_monitor in ceph_monitors %}
                {{ ceph_monitor }}{% if not loop.last %},{% endif %}
                {% endfor %}
              ]
            }
          ]
      metadata:
        name: ceph-csi-config
        namespace: ceph-csi-rbd

- name: Configure csi-kms-config-map.yaml
  vars:
    ansible_python_interpreter: /opt/k8s_venv/bin/python
  kubernetes.core.k8s:
    state: present
    kubeconfig: "{{ kubeconfig_temp_path }}"
    definition:
      apiVersion: v1
      kind: ConfigMap
      data:
        config.json: |-
          {}
      metadata:
        name: ceph-csi-encryption-kms-config
        namespace: ceph-csi-rbd

- name: Configure ceph-config-map.yaml
  vars:
    ansible_python_interpreter: /opt/k8s_venv/bin/python
  kubernetes.core.k8s:
    state: present
    kubeconfig: "{{ kubeconfig_temp_path }}"
    definition:
      apiVersion: v1
      kind: ConfigMap
      data:
        ceph.conf: |
          [global]
          auth_cluster_required = cephx
          auth_service_required = cephx
          auth_client_required = cephx
        # keyring is a required key and its value should be empty
        keyring: |
      metadata:
        name: ceph-config
        namespace: ceph-csi-rbd

- name: Configure csi-rbd-secret.yaml
  vars:
    ansible_python_interpreter: /opt/k8s_venv/bin/python
  kubernetes.core.k8s:
    state: present
    kubeconfig: "{{ kubeconfig_temp_path }}"
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: csi-rbd-secret
        namespace: ceph-csi-rbd
      stringData:
        userID: "{{ ceph_user_id }}"
        userKey: "{{ ceph_user_key }}"

- name: Download csi-rbdplugin-provisioner.yaml
  ansible.builtin.uri:
    url: "https://raw.githubusercontent.com/ceph/ceph-csi/master/deploy/rbd/kubernetes/csi-rbdplugin-provisioner.yaml"
    dest: "/tmp/csi-rbdplugin-provisioner.yaml"
    method: GET

- name: Apply csi-rbdplugin-provisioner.yaml from downloaded file
  vars:
    ansible_python_interpreter: /opt/k8s_venv/bin/python
  kubernetes.core.k8s:
    state: present
    kubeconfig: "{{ kubeconfig_temp_path }}"
    src: "/tmp/csi-rbdplugin-provisioner.yaml"

- name: Download csi-rbdplugin.yaml
  ansible.builtin.uri:
    url: "https://raw.githubusercontent.com/ceph/ceph-csi/master/deploy/rbd/kubernetes/csi-rbdplugin.yaml"
    dest: "/tmp/csi-rbdplugin.yaml"
    method: GET

- name: Apply csi-rbdplugin.yaml from downloaded file
  vars:
    ansible_python_interpreter: /opt/k8s_venv/bin/python
  kubernetes.core.k8s:
    state: present
    kubeconfig: "{{ kubeconfig_temp_path }}"
    src: "/tmp/csi-rbdplugin.yaml"

- name: Configure Ceph CSI Storage Class
  vars:
    ansible_python_interpreter: /opt/k8s_venv/bin/python
  kubernetes.core.k8s:
    state: present
    kubeconfig: "{{ kubeconfig_temp_path }}"
    definition:
      apiVersion: storage.k8s.io/v1
      kind: StorageClass
      metadata:
        name: csi-rbd-sc
      provisioner: rbd.csi.ceph.com
      parameters:
        clusterID: "{{ ceph_cluster_id }}"
        pool: "{{ ceph_user_id }}"
        imageFeatures: layering
        csi.storage.k8s.io/provisioner-secret-name: csi-rbd-secret
        csi.storage.k8s.io/provisioner-secret-namespace: default
        csi.storage.k8s.io/controller-expand-secret-name: csi-rbd-secret
        csi.storage.k8s.io/controller-expand-secret-namespace: default
        csi.storage.k8s.io/node-stage-secret-name: csi-rbd-secret
        csi.storage.k8s.io/node-stage-secret-namespace: default
      reclaimPolicy: Delete
      allowVolumeExpansion: true
      mountOptions:
        - discard